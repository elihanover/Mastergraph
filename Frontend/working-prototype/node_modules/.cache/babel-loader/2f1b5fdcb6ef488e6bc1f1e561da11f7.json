{"ast":null,"code":"import _classCallCheck from \"/Users/tylerangert/Desktop/MASTERGRAPH/prototyping/proto2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/tylerangert/Desktop/MASTERGRAPH/prototyping/proto2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/tylerangert/Desktop/MASTERGRAPH/prototyping/proto2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/tylerangert/Desktop/MASTERGRAPH/prototyping/proto2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/tylerangert/Desktop/MASTERGRAPH/prototyping/proto2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/tylerangert/Desktop/MASTERGRAPH/prototyping/proto2/src/components/lib/Node.js\";\nimport React, { Component } from 'react'; // Interaction\n\nimport onClickOutside from 'react-onclickoutside';\nimport Draggable from 'react-draggable';\nimport { Resizable, ResizableBox } from 'react-resizable'; // Lambda node stuff\n\nimport AceEditor from 'react-ace';\nimport brace from 'brace';\nimport 'brace/mode/javascript';\nimport 'brace/theme/terminal'; // Extra interface stuff\n\nimport { ButtonGroup, Button, Switch, Collapse } from \"@blueprintjs/core\";\nimport NodeInputList from './NodeInputList';\nimport NodeOuputList from './NodeOutputList';\n\nvar Node =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Node, _Component);\n\n  function Node(props) {\n    var _this;\n\n    _classCallCheck(this, Node);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Node).call(this, props));\n\n    _this.getPos = function (ui) {\n      return {\n        x: ui.x,\n        y: ui.y\n      };\n    };\n\n    _this.onCodeChange = function (code) {\n      _this.setState({\n        code: code\n      });\n    };\n\n    _this.toggleCode = function () {\n      console.log(\"Pressing toggle code\");\n\n      _this.setState({\n        codeIsOpen: !_this.state.codeIsOpen\n      }, function () {\n        console.log(_this.state.codeIsOpen);\n      });\n    };\n\n    _this.renderSpecificContent = function (type) {\n      // <Collapse keepChildrenMounted = {true} isOpen={this.state.codeIsOpen}>\n      //   <pre>\n      //     </pre>\n      //   </Collapse>\n      //\n      var code = _this.state.code;\n      var options = {\n        selectOnLineNumbers: true\n      };\n      var content;\n\n      if (type === \"lambda\") {\n        content = React.createElement(\"div\", {\n          className: \"node-code-editor\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108\n          },\n          __self: this\n        }, React.createElement(Button, {\n          active: _this.state.codeIsOpen,\n          minimal: true,\n          style: {\n            backgroundColor: \"rgba(255,255,255,0.1)\",\n            color: \"rgba(255,255,255,0.25)\",\n            width: \"90%\",\n            marginBottom: 5\n          },\n          onClick: _this.toggleCode,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109\n          },\n          __self: this\n        }, \"Edit code\"), React.createElement(AceEditor, {\n          onChange: _this.onCodeChange,\n          mode: \"javascript\",\n          theme: \"terminal\",\n          width: \"300px\",\n          height: _this.state.codeIsOpen ? \"150px\" : \"150px\",\n          setOptions: {\n            enableBasicAutocompletion: true,\n            enableSnippets: true,\n            showLineNumbers: true,\n            tabSize: 2\n          },\n          editorProps: {\n            $blockScrolling: false\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113\n          },\n          __self: this\n        }));\n      }\n\n      return content;\n    };\n\n    _this.renderParameters = function () {\n      var params = _this.props.parameters;\n\n      if (params !== undefined) {\n        return React.createElement(\"ul\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 134\n          },\n          __self: this\n        }, params.map(function (p) {\n          return React.createElement(\"li\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 136\n            },\n            __self: this\n          }, p);\n        }));\n      }\n    };\n\n    _this.state = {\n      selected: false,\n      code: '',\n      codeIsOpen: false\n    };\n    return _this;\n  } // MARK: UI Util\n\n\n  _createClass(Node, [{\n    key: \"handleDragStart\",\n    // MARK: Drag events\n    value: function handleDragStart(event, ui) {\n      this.props.onNodeStart(this.props.nid, this.getPos(ui));\n    }\n  }, {\n    key: \"handleDragStop\",\n    value: function handleDragStop(event, ui) {\n      this.props.onNodeStop(this.props.nid, this.getPos(ui));\n    }\n  }, {\n    key: \"handleDrag\",\n    value: function handleDrag(event, ui) {\n      this.props.onNodeMove(this.props.index, this.getPos(ui));\n    }\n  }, {\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps, nextState) {\n      return this.state.selected !== nextState.selected;\n    } // MARK: Connection events\n\n  }, {\n    key: \"onStartConnector\",\n    value: function onStartConnector(index) {\n      this.props.onStartConnector(this.props.nid, index);\n    }\n  }, {\n    key: \"onCompleteConnector\",\n    value: function onCompleteConnector(index) {\n      this.props.onCompleteConnector(this.props.nid, index);\n    } // MARK: Click events\n\n  }, {\n    key: \"handleClick\",\n    value: function handleClick(e) {\n      this.setState({\n        selected: true\n      });\n\n      if (this.props.onNodeSelect) {\n        this.props.onNodeSelect(this.props.nid);\n      }\n    }\n  }, {\n    key: \"handleClickOutside\",\n    value: function handleClickOutside() {\n      var selected = this.state.selected;\n\n      if (this.props.onNodeDeselect && selected) {\n        this.props.onNodeDeselect(this.props.nid);\n      }\n\n      this.setState({\n        selected: false\n      });\n    }\n  }, {\n    key: \"render\",\n    // {this.props.children}\n    value: function render() {\n      var _this2 = this;\n\n      var selected = this.state.selected;\n      var nodeClass = 'node' + (selected ? ' selected' : ''); // <ResizableBox draggableOpts={{}} minConstraints={[100, 100]} maxConstraints={[300, 300]}>\n      //   <span>\n      // onDoubleClick={(e) => {this.handleClick(e)}}\n      // <h2>Parameters</h2>\n      // {this.renderParameters()}\n\n      console.log(this.props.parameters);\n      return React.createElement(\"div\", {\n        onDoubleClick: function onDoubleClick(e) {\n          _this2.handleClick(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, React.createElement(Draggable, {\n        handle: \".node-header\",\n        defaultPosition: {\n          x: this.props.pos.x,\n          y: this.props.pos.y\n        },\n        onStart: function onStart(event, ui) {\n          return _this2.handleDragStart(event, ui);\n        },\n        onStop: function onStop(event, ui) {\n          return _this2.handleDragStop(event, ui);\n        },\n        onDrag: function onDrag(event, ui) {\n          return _this2.handleDrag(event, ui);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, React.createElement(\"section\", {\n        className: nodeClass,\n        style: {\n          zIndex: 10000\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, React.createElement(\"header\", {\n        className: \"node-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"node-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, this.props.title)), React.createElement(\"div\", {\n        className: \"node-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, React.createElement(NodeInputList, {\n        items: this.props.inputs,\n        onCompleteConnector: function onCompleteConnector(index) {\n          return _this2.onCompleteConnector(index);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }), React.createElement(NodeOuputList, {\n        items: this.props.outputs,\n        onStartConnector: function onStartConnector(index) {\n          return _this2.onStartConnector(index);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      })), this.renderSpecificContent(this.props.type))));\n    }\n  }]);\n\n  return Node;\n}(Component);\n\nexport default onClickOutside(Node);","map":{"version":3,"sources":["/Users/tylerangert/Desktop/MASTERGRAPH/prototyping/proto2/src/components/lib/Node.js"],"names":["React","Component","onClickOutside","Draggable","Resizable","ResizableBox","AceEditor","brace","ButtonGroup","Button","Switch","Collapse","NodeInputList","NodeOuputList","Node","props","getPos","ui","x","y","onCodeChange","code","setState","toggleCode","console","log","codeIsOpen","state","renderSpecificContent","type","options","selectOnLineNumbers","content","backgroundColor","color","width","marginBottom","enableBasicAutocompletion","enableSnippets","showLineNumbers","tabSize","$blockScrolling","renderParameters","params","parameters","undefined","map","p","selected","event","onNodeStart","nid","onNodeStop","onNodeMove","index","nextProps","nextState","onStartConnector","onCompleteConnector","e","onNodeSelect","onNodeDeselect","nodeClass","handleClick","pos","handleDragStart","handleDragStop","handleDrag","zIndex","title","inputs","outputs"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\n\n// Interaction\nimport onClickOutside from 'react-onclickoutside';\nimport Draggable from 'react-draggable'\nimport { Resizable, ResizableBox } from 'react-resizable';\n\n// Lambda node stuff\nimport AceEditor from 'react-ace';\nimport brace from 'brace';\nimport 'brace/mode/javascript';\nimport 'brace/theme/terminal';\n\n// Extra interface stuff\nimport { ButtonGroup, Button, Switch, Collapse } from \"@blueprintjs/core\";\n\nimport NodeInputList from './NodeInputList';\nimport NodeOuputList from './NodeOutputList';\n\nclass Node extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            selected: false,\n            code: '',\n            codeIsOpen: false\n        }\n    }\n\n    // MARK: UI Util\n    getPos = (ui) => {\n      return {\n        x: ui.x,\n        y: ui.y\n      }\n    }\n\n    // MARK: Drag events\n    handleDragStart(event, ui) {\n        this.props.onNodeStart(this.props.nid, this.getPos(ui));\n    }\n\n    handleDragStop(event, ui) {\n        this.props.onNodeStop(this.props.nid, this.getPos(ui));\n    }\n\n    handleDrag(event, ui) {\n        this.props.onNodeMove(this.props.index, this.getPos(ui));\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        return this.state.selected !== nextState.selected;\n    }\n\n    // MARK: Connection events\n    onStartConnector(index) {\n        this.props.onStartConnector(this.props.nid, index);\n    }\n\n    onCompleteConnector(index) {\n        this.props.onCompleteConnector(this.props.nid, index);\n    }\n\n    // MARK: Click events\n    handleClick(e) {\n        this.setState({selected: true});\n        if (this.props.onNodeSelect) {\n            this.props\n                .onNodeSelect(this.props.nid);\n        }\n    }\n\n    handleClickOutside() {\n        let {selected} = this.state;\n        if (this.props.onNodeDeselect && selected) {\n            this.props\n                .onNodeDeselect(this.props.nid);\n        }\n        this.setState({selected: false});\n    }\n\n    onCodeChange = (code) => {\n      this.setState({code: code})\n    }\n\n    toggleCode = () => {\n      console.log(\"Pressing toggle code\")\n      this.setState({\n        codeIsOpen: !this.state.codeIsOpen\n      }, () => {\n        console.log(this.state.codeIsOpen)\n      })\n    }\n\n    renderSpecificContent = (type) => {\n\n      // <Collapse keepChildrenMounted = {true} isOpen={this.state.codeIsOpen}>\n      //   <pre>\n      //     </pre>\n      //   </Collapse>\n      //\n      const code = this.state.code;\n      const options = {\n          selectOnLineNumbers: true\n      };\n      let content;\n      if(type === \"lambda\") {\n        content = (<div className=\"node-code-editor\">\n                  <Button active = {this.state.codeIsOpen}\n                          minimal={true}\n                          style={{backgroundColor: \"rgba(255,255,255,0.1)\", color: \"rgba(255,255,255,0.25)\", width: \"90%\", marginBottom: 5}}\n                          onClick = {this.toggleCode}>Edit code</Button>\n                    <AceEditor onChange={this.onCodeChange}\n                               mode=\"javascript\"\n                               theme=\"terminal\"\n                               width={\"300px\"}\n                               height={this.state.codeIsOpen ? \"150px\" : \"150px\" }\n                               setOptions={{\n                                enableBasicAutocompletion: true,\n                                enableSnippets: true,\n                                showLineNumbers: true,\n                                tabSize: 2,\n                                }}\n                               editorProps={{$blockScrolling: false }}/>\n                    </div>\n                  )\n      }\n      return content;\n    }\n\n    renderParameters = () => {\n      let params = this.props.parameters;\n      if(params !== undefined) {\n        return <ul>\n          {params.map(p=>{\n            return <li>{p}</li>\n          })}\n        </ul>\n      }\n    }\n\n    // {this.props.children}\n\n    render() {\n        let {selected} = this.state;\n\n        let nodeClass = 'node' + (\n            selected\n            ? ' selected'\n            : '');\n\n        // <ResizableBox draggableOpts={{}} minConstraints={[100, 100]} maxConstraints={[300, 300]}>\n        //   <span>\n        // onDoubleClick={(e) => {this.handleClick(e)}}\n        // <h2>Parameters</h2>\n        // {this.renderParameters()}\n        console.log(this.props.parameters)\n\n        return(\n            <div onDoubleClick={(e) => {this.handleClick(e)}}>\n              <Draggable\n                handle=\".node-header\"\n                defaultPosition={{x:this.props.pos.x,y:this.props.pos.y}}\n                onStart={(event, ui)=>this.handleDragStart(event, ui)}\n                onStop={(event, ui)=>this.handleDragStop(event, ui)}\n                onDrag={(event, ui)=>this.handleDrag(event, ui)}>\n                <section className={nodeClass} style={{zIndex:10000}}>\n                    <header className=\"node-header\">\n                      <span className=\"node-title\">{this.props.title}</span>\n                    </header>\n                    <div className=\"node-content\">\n                      <NodeInputList items={this.props.inputs} onCompleteConnector={(index)=>this.onCompleteConnector(index)} />\n                      <NodeOuputList items={this.props.outputs} onStartConnector={(index)=>this.onStartConnector(index)} />\n                    </div>\n                      {this.renderSpecificContent(this.props.type)}\n                </section>\n              </Draggable>\n          </div>\n\n      );\n    }\n}\n\nexport default onClickOutside(Node);\n"]},"metadata":{},"sourceType":"module"}